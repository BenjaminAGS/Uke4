Oppgave 1.21

0001 = 1
0010 = 2
0101 = 5
1000 = 8
10000 = 16
100000000 = 256

100 = 4
1001 = 9
1100 1100 11 = 819

Vi begynner med tallet 1 på høyre side, og tall dobler seg hele veien.
Vi kan enten telle fra en side til en annen, eller bruke formlen:
Binærtall *2^posisjonen i vårt tallsystem
Eks:
1×28 + 0×27 + 1×26 + 1×25 + 0×24 + 0×23 + 1×22 + 0×21 + 1×20

= 1×256 + 0×128 + 1×64 + 1×32 + 0×16 + 0×8 + 1×4 + 0×2 + 1×1

= 256 + 64 + 32 + 4 + 1

= 357

For å gå andre veien kan vi dele på 2, og følge med på hva vi har igjen, eks:


1.2.2
Tallet blir 101

Formel:
Log2(Valgmuligheter (M)/Antall siffer (N))
Antall siffer/Valgmuligheter
3/2
1.5 Bit

Oppgave 1.2.3
Allerede satt opp git
Git clone
Git status
Git add *
Git commit -m "Melding"
Git push

Oppgave 1.2.4
1)
Git-flow er et fint verktøy når alle er komfortable med git og kan git-flow modellen
Men hvis vi kommer i en situasjon hvor noen ikke kan modellen godt nok eller lignende så har vi et problem.

Ellers så fungerer det veldig fint da man alltid har en fullt deployable versjon av programmet sitt, og mulighet for å legge til/teste nye funksjoner uten å påvirke master branch.

2)Objektfiler:
Windows - MSI (microsoft self installer)
Mac OS X - Mach-O
Linux - ELF (Executable and linkable format)

3)
Det er forskjeller fra java, blant annet ved import statementet, hvor man kan importere slik som java, eller flere pakker samtidig med
Import (
Pakke1
Pakke2
)

Ellers så slipper man semikolon på enden av hver setning
I if statements og lignende slipper man også å bruke () for å holde statementet

4)
De fleste programmeringsmiljøer er forskjellige, og krever derfor forskjellig tankegang. I og sitt tilfelle er riktig mappestruktur utrolig viktig for at det skal fungere på riktig måte.

5)
Det er hensiktsmessig å legge denne i et git repository fordi man da har bedre kontroll over filen. Det er også lettere å dele denne med de andre gruppemedlemmene.

6)
Pakken log som vi implementere skiller seg ut ved at den er veldig liten, men i motsetning til fmt så er log designet for å utføre en utregning,
mens fmt er til for funksjoner relatert til tekst og formater
